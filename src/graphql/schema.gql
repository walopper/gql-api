# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Provides info abou the current page"""
type PageInfo {
  """Cursor referencing the beginning of the page"""
  startCursor: String

  """Cursor referencing the end of the page"""
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type User {
  id: ID
  first_name: String
  last_name: String
  username: String
  last_login: String
  last_login_attempt: String
  sex: String
  email: EmailAddress
  phone: String
  phone_ext: String
  phone2: String
  phone2_ext: String
  internal_id: String
  language: String
  active: Boolean
}

"""Mongo object id scalar type"""
scalar EmailAddress

"""Provides User item and a cursor to its position"""
type UserEdge {
  """The position of this User item"""
  cursor: String!
  node: User!
}

type ContactStage {
  id: ID
  position: Float
  name_es: String
  name_en: String
  slug: String
  updated_at: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ContactStatus {
  id: ID
  stage_id: Float
  type: String
  win_percentage: Float
  is_active: Boolean
  position: Float
  name_es: String
  name_en: String
  slug: String
  updated_at: DateTime
}

type Source {
  id: ID!
  campaign_id: Float
  channel_id: Float
  name: String
  description: String
  cost: Float
  hash: String
  created_at: DateTime
  updated_at: DateTime
}

"""Provides Source item and a cursor to its position"""
type SourceEdge {
  """The position of this Source item"""
  cursor: String!
  node: Source!
}

type Medium {
  id: ID!
  type: String
  slug: String
  is_chat: Boolean
  is_active: Boolean
  name_en: String
  name_es: String
  created_at: DateTime
  updated_at: DateTime
}

"""Provides Medium item and a cursor to its position"""
type MediumEdge {
  """The position of this Medium item"""
  cursor: String!
  node: Medium!
}

type ContactHistory {
  id: ID
  contact: Contact
  contact_id: Float!
  company: Company
  company_id: Float
  lead_id: Float
  source: Source
  medium: Medium
  user: User!
  account_id: Float
  department_id: Float
  status: String
  lead_address: String
  resource_address: String
  destination_address: String
  quantity: Float
  direction: String
  message: String
  vendor: String
  vendor_resource_id: DateTime
  created_at: DateTime
  updated_at: DateTime
}

"""Provides ContactHistory item and a cursor to its position"""
type ContactHistoryEdge {
  """The position of this ContactHistory item"""
  cursor: String!
  node: ContactHistory!
}

type ContactHistoryConnection {
  """Total number of ContactHistory items"""
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [ContactHistoryEdge!]!
}

type Contact {
  id: ID
  company: Company
  history(
    """Cursor to the item after which first n items will be taken"""
    after: String
    first: Int
    before: String

    """Cursor to the item before which last n items will be taken"""
    last: Int
    where: ContactQueryWhereInput
    order_by: [ContactQueryOrderByInput!]
  ): ContactHistoryConnection
  sex: String
  stage: ContactStage
  status: ContactStatus
  owner: User!
  first_name: String
  last_name: String
  birthdate: DateTime
  name: String
  email: EmailAddress
  phone_home: String!
  phone_office: String!
  phone_cel: String!
  address1: String
  address2: String
  city: String
  postal_code: String
  follow_up_at: DateTime
  notes: String
  interest: String
  assigned_at: DateTime
  last_activity_at: DateTime
  last_communication_interaction_at: DateTime
  created_at: DateTime
  updated_at: DateTime
}

input ContactQueryWhereInput {
  _and: [ContactQueryWhereInput!]
  _or: [ContactQueryWhereInput!]
  id: NumberComparisionOperatorsInput
  name: StringComparisionOperatorsInput
  company_id: NumberComparisionOperatorsInput
  company: CompanyQueryWhereInput
  stage: ContactStageQueryWhereInput
  status: ContactStatusQueryWhereInput
}

input NumberComparisionOperatorsInput {
  _eq: Float
  _not_eq: Float
  _in: [Float!]
  _not_in: [Float!]
  _is_null: Boolean
}

input StringComparisionOperatorsInput {
  _eq: String
  _not_eq: String
  _in: [String!]
  _not_in: [String!]
  _contains: String
  _not_contains: String
  _starts_with: String
  _not_starts_with: String
  _ends_With: String
  _not_ends_With: String
  _is_null: Boolean
}

input CompanyQueryWhereInput {
  _and: CompanyQueryWhereInput
  _or: CompanyQueryWhereInput
  id: NumberComparisionOperatorsInput
  name: StringComparisionOperatorsInput
  crm_is_active: BooleanComparisionOperatorsInput
}

input BooleanComparisionOperatorsInput {
  _eq: Boolean
  _not_eq: Boolean
  _is_null: Boolean
}

input ContactStageQueryWhereInput {
  _or: [ContactQueryWhereInput!]
  id: NumberComparisionOperatorsInput
}

input ContactStatusQueryWhereInput {
  _or: [ContactQueryWhereInput!]
  id: NumberComparisionOperatorsInput
}

input ContactQueryOrderByInput {
  name: QueryOrderByDirection
  company: CompanyQueryOrderByInput
}

enum QueryOrderByDirection {
  ASC
  DESC
}

input CompanyQueryOrderByInput {
  name: QueryOrderByDirection
  crm_is_active: QueryOrderByDirection
}

"""Provides Contact item and a cursor to its position"""
type ContactEdge {
  """The position of this Contact item"""
  cursor: String!
  node: Contact!
}

type ContactConnection {
  """Total number of Contact items"""
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [ContactEdge!]!
}

type Company implements IInstitution {
  id: ID!
  name: String
  level: Float
  timezone: String
  is_active: Boolean
  crm_is_active: Boolean
  contacts(
    """Cursor to the item after which first n items will be taken"""
    after: String
    first: Int
    before: String

    """Cursor to the item before which last n items will be taken"""
    last: Int
    where: ContactQueryWhereInput
    order_by: [ContactQueryOrderByInput!]
  ): ContactConnection!
}

interface IInstitution {
  id: ID!
  name: String
  level: Float
}

"""Provides Company item and a cursor to its position"""
type CompanyEdge {
  """The position of this Company item"""
  cursor: String!
  node: Company!
}

type CompanyConnection {
  """Total number of Company items"""
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [CompanyEdge!]!
}

type Query {
  companies(
    """Cursor to the item after which first n items will be taken"""
    after: String
    first: Int
    before: String

    """Cursor to the item before which last n items will be taken"""
    last: Int
    where: CompanyQueryWhereInput
    order_by: [CompanyQueryOrderByInput!]
  ): CompanyConnection!
  contactsByCompanyId(
    """Cursor to the item after which first n items will be taken"""
    after: String
    first: Int
    before: String

    """Cursor to the item before which last n items will be taken"""
    last: Int
    where: ContactQueryWhereInput
    order_by: [ContactQueryOrderByInput!]
    company_id: ID!
  ): ContactConnection!
  contactHistory(
    """Cursor to the item after which first n items will be taken"""
    after: String
    first: Int
    before: String

    """Cursor to the item before which last n items will be taken"""
    last: Int
    where: ContactQueryWhereInput
    order_by: [ContactQueryOrderByInput!]
    company_id: ID!
    contact_id: ID!
  ): ContactHistoryConnection!
}

type Mutation {
  uploadFile(file: Upload!): Boolean!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
